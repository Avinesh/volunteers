- name: Install dependencies
  package:
    name: "{{item}}"
    state: present
  with_items:
    - python3.5
    - nginx
    - python3-pip
- name: "Create system user {{app_user}}"
  user:
    name: "{{app_user}}"
    group: "{{app_group}}"
    create_home: yes
    shell: /bin/false
    system: yes
    home: "{{base_dir}}"
  become: yes
- name: Clone the application
  git:
    repo: https://github.com/FOSDEM/volunteers.git
    dest: "{{base_dir}}/tool"
    version: master
  become: yes
  become_user: "{{app_user}}"
  notify: Restart fosdem_volunteers
- name: Install dependencies inside a virtual environment
  pip:
    virtualenv: "{{base_dir}}/venv3"
    virtualenv_python: python3
    requirements: "{{base_dir}}/tool/requirements.txt"
  become: yes
  become_user: "{{app_user}}"
- name: Add gunicorn to venv
  pip:
    virtualenv: "{{base_dir}}/venv3"
    name: gunicorn
  become: yes
  become_user: "{{app_user}}"
- name: Create media directory
  file:
    path: "{{base_dir}}/tool/media/mugshots"
    state: directory
  become: yes
  become_user: "{{app_user}}"
- name: Check if localsettings exists
  stat:
    path: "{{ base_dir }}/tool/volunteer_mgmt"
  register: localsettings
- pause:
    prompt: "Please create localsettings.py in {{base_dir}}/tool/volunteer_mgmt"
  when: not localsettings.stat.exists
  notify: Restart fosdem_volunteers
- name: Run migrations
  django_manage:
    app_path: "{{base_dir}}/tool"
    command: migrate
    virtualenv: "{{base_dir}}/venv3"
  become: yes
  become_user: "{{app_user}}"
- name: Collect static files
  django_manage:
    app_path: "{{base_dir}}/tool"
    command: collectstatic
    virtualenv: "{{base_dir}}/venv3"
  become: yes
  become_user: "{{app_user}}"
- name: Create systemd service file
  template:
    dest: /etc/systemd/system/fosdem_volunteers.service
    src: volunteers.service.j2
  become: yes
  notify: Restart fosdem_volunteers
- name: Install nginx configuration file
  template:
    dest: /etc/nginx/conf.d/fosdem_volunteers.conf
    src: nginx.conf.j2
  become: yes
  notify: Reload nginx
